[{"/Users/skylar/post-sei/hooks-react/src/index.js":"1","/Users/skylar/post-sei/hooks-react/src/App.js":"2","/Users/skylar/post-sei/hooks-react/src/reportWebVitals.js":"3","/Users/skylar/post-sei/hooks-react/src/components/TextInputWithFocusButton.jsx":"4","/Users/skylar/post-sei/hooks-react/src/components/Counter.jsx":"5","/Users/skylar/post-sei/hooks-react/src/components/RenderCount.jsx":"6"},{"size":500,"mtime":1610060640503,"results":"7","hashOfConfig":"8"},{"size":385,"mtime":1610493498737,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610060640506,"results":"10","hashOfConfig":"8"},{"size":380,"mtime":1610063504015,"results":"11","hashOfConfig":"8"},{"size":738,"mtime":1610493472715,"results":"12","hashOfConfig":"8"},{"size":1399,"mtime":1610493566214,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"52s5mb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/skylar/post-sei/hooks-react/src/index.js",[],["28","29"],"/Users/skylar/post-sei/hooks-react/src/App.js",["30","31"],"/Users/skylar/post-sei/hooks-react/src/reportWebVitals.js",[],"/Users/skylar/post-sei/hooks-react/src/components/TextInputWithFocusButton.jsx",[],"/Users/skylar/post-sei/hooks-react/src/components/Counter.jsx",["32"],"import { useState, useRef, useEffect} from 'react'\n\nconst Counter = () => {\n\n    const counter = useRef(0);\n\n    // if we do just counter.current = counter.current + 1 outside of the useEffect,\n    // then the ref value would be updated during the render phase, which means the value can be incremented more than once.\n    // therefore, refs should be modified in event handlers or in effects, not in render phase\n    useEffect(() => {\n        // every time the component has been re-rendered, the counter is incremented\n        counter.current = counter.current + 1;\n    });\n\n    return (  \n        <>\n            <p>useEffect The component has been re-rendered {counter.current} times.</p>\n        </>\n    );\n}\n \nexport default Counter;","/Users/skylar/post-sei/hooks-react/src/components/RenderCount.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":15},{"ruleId":"37","severity":1,"message":"42","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":18},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]